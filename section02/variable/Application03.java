package main.java.com.ohgiraffers.section02.variable;

public class Application03
{
    public static void main(String[] args)



    {

/*    변수의 명명 규칙
      변수의 이름을 지을 떄 아무거나 짓는 것이 아니라, 규칙이 있다.
      실무적으로는 굉장히 중요하기 때문에 반드시 숙지해야.
      또한 규칙에 맞는 올바른 변수명을 짓는 것은 좋은 프로그래밍을 하는 첫 단추!
 */

            /* 규칙
            1. 컴파일 에러를 발생시키는 규칙
                1-1. 동일한 범위 내에서는 동일한 변수명 X
                1-2. 예약어는 사용이 불가
                1-3. 변수명은 대/소문자 구분
                1-4. 변수명은 숫자로 시작 X
                1-5. 특수 기호는 '-'와 '$'만 사용 가능!

             2. 컴파일 에러를 발생시키지 않지만 개발자끼리의 암묵적 규칙
                2-1. 변수명으 ㅣ길이제한은 없지만 적당히
                2-2. 변수명이 합성어로 이루어진 경우 첫 단어는 소문자,
                두벉쨰 단어의 시작은 대문자로
                2-3. 단어와 단어 사이의 연결은 언더스코어(_)로 하지 않는다 ( 타 언어 네이밍 규칙)
                2-4. 한글로 변수명을 짓는 것은 가능, BUT 권장X
                2-5. 변수 안에 저장된 값이 어떤 의미를 가지는지 명확하게 표현하도록 한다
                2-6. 전형적인 변수 이름이 있다면 가급적 그것을 사용
                2-7. 명사형으로 작성할 수 있도록 한다
                2-8. boolean형은 의문문으로, 가급 긍정적으로 네이밍


             */

//        1-2. 동일한 범위({}스코프) 내에서 동일한 변수명을 가질 수 없다
        int age = 20;
//        int age = 10 ; <- 불가!


//        1-3. 예약어는 사용이 불가능하다.
//        int true = 10;
//        int for = 20;
//        다 불가.

        // 1-4. 변수명은 숫자로 시작할 수 X (중간, 끝은 가능. 시작만 안됨)
        // int 1test = 10;    불가
        // int te10st10 = 10; 가능

        //1-5. 특수기호는 '-' 와 '$'만 사용 가능
        int _ag_e = 20;
        int $test = 20;

        //2-1. 에러를 발생시키지 않지만 개발자 간의 암묵적인 룰
//        int adjfsljfdajdlsjfkalfjlasjdlfjdsafj ; 안됨

        //2-2. 변수명이 합서어로 이루어진 경우 첫 단어는 소문자, 두 번째 단어의 시작은 대문자
//        int cruelSummer
//          int Maxage = 20; 이렇게 표현해도 무방하나, 사용 X
        //  int maxAge = 20; 올바른 표현

        /* 클래스 만들때는 대문자로 시작한다. */



        //2-3. 단어와 단어 사이의 연결은 언더스코어(_) 사용X
//        String user_name;  // 스네이크 케이스. 에러는 아니지만 사용x
          String usernName; //  카멜 케이스.    올바른 표현

        //2-4. 한글로 변수명을 짓는 것은 가능, BUT 권장 X

        int 나이;

        //2-5. 변수 안에 저장된 값이 어떤 의미를 가지는지 명확하게 표현하도록 한다.
        //개발은 협업하는 일이 많기 때문에, 명확한 의미를 가진 변수를 사용하는 것이 권장됨
        String s;
        String name;

        //2-6. 전형적인 변수 이름이 있다면 그것을 가급적 사용한다
        int sum;
        int max;
        int min;
        int count;

        //2-7. 명사형으로 작성할 수 있도록 한다.
        String goHome; //가능하면 명사형으로
        String home;

        //2-8. boolean형은 의문문, 가급적 긍정형태를 갖는다.
        boolean isAlive = true;
        boolean isDead = false; //부정형보다는 긍정형을 권장한다











    }
}
